<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://code.alibabatech.com/schema/dubbo
		http://code.alibabatech.com/schema/dubbo/dubbo.xsd">
	<!-- 拦截器使用对象,使用Spring注入 -->
	<dubbo:reference id="sysUserProvider"  interface="org.idata.provider.sys.SysUserProvider" />
	
	
	<!-- 这里主要是设置自定义的单Realm应用,若有多个Realm,可使用'realms'属性代替 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm">
			<bean class="org.idata.core.support.shiro.Realm" />
		</property>
	</bean>
	<bean id="permisssionFilter" class="org.idata.core.support.shiro.PermisssionFilter" />  
	<!-- Web应用中,Shiro可控制的Web请求必须经过Shiro主过滤器的拦截,Shiro对基于Spring的Web应用提供了完美的支持 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- Shiro的核心安全接口,这个属性是必须的 -->
		<property name="securityManager" ref="securityManager" />
		<!-- 要求登录时的链接 -->
		<property name="loginUrl" value="/unauthorized" />
		<!-- 用户访问未对其授权的资源时,所显示的连接 -->
		<property name="unauthorizedUrl" value="/forbidden" />
		<property name="filters">  
	        <map>  
	            <entry key="perms" value-ref="permisssionFilter" />
	        </map>  
	    </property>
		<!-- Shiro连接约束配置,即过滤链的定义 -->
		<!-- anon：它对应的过滤器里面是空的,什么都没做 -->
		<!-- authc：该过滤器下的页面必须验证后才能访问,它是Shiro内置的一个拦截器org.apache.shiro.web.filter.authc.FormAuthenticationFilter -->
		<property name="filterChainDefinitions">
			<value>
				/** = anon
				<!-- /regin=anon
				/login=anon
				/logout=anon
				/*.ico=anon
				/upload/*=anon
				/unauthorized=anon
				/forbidden=anon
				/sns*=anon
				/callback*=anon
				/**=authc,perms -->
			</value>
		</property>
	</bean>
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
</beans>